---
- name: debian | definining openldap install settings
  debconf:
    name: slapd
    question: "{{ item['question'] }}"
    value: "{{ item['value'] }}"
    vtype: "{{ item['vtype'] }}"
  become: true
  changed_when: false
  no_log: false
  loop:
    - question: slapd/internal/generated_adminpw
      value: "{{ openldap_admin_password }}"
      vtype: password
    - question: slapd/password2
      value: "{{ openldap_admin_password }}"
      vtype: password
    - question: slapd/internal/adminpw
      value: "{{ openldap_admin_password }}"
      vtype: password
    - question: slapd/password1
      value: "{{ openldap_admin_password }}"
      vtype: password
    - question: slapd/domain
      value: "{{ openldap_domain_name }}"
      vtype: string
    - question: shared/organization
      value: "{{ openldap_org }}"
      vtype: string
    - question: slapd/backend
      value: "{{ openldap_db_engine }}"
      vtype: string

- name: debian | installing packages
  apt:
    name: "{{ openldap_debian_packages }}"
    state: present
  become: true
  register: result
  until: result is successful

#----------------------------------------

- name: config_openldap | configuring ldap
  template:
    src: ldap.conf.j2
    dest: /etc/ldap/ldap.conf
    owner: root
    group: root
    mode: 0644

- name: config_openldap | creating temp folder
  file:
    path: '{{ openldap_ldif_tmp_dir }}'
    state: directory
    owner: 'root'
    group: 'root'
    mode: '0640'

- name: config_openldap_schemas | copying schemas files
  copy:
    src: '{{ item }}'
    dest: '/etc/ldap/schema/'
    owner: 'root'
    group: 'root'
    mode: '0640'
  with_fileglob:
    - 'files/openldap/schema/*.schema'
  become: true

- name: config_openldap_schemas | creating a conversion file
  template:
    src: etc/ldap/slapd.d/schema_conversion.conf.j2
    dest: '{{ openldap_ldif_tmp_dir }}/schema_conversion.conf'
    owner: root
    group: root
    mode: 0644

- name: config_openldap_schemas | covertyng *.schema to *.ldif
  command: slaptest -f {{ openldap_ldif_tmp_dir }}/schema_conversion.conf -F {{ openldap_ldif_tmp_dir }}

#- name: config_openldap_schemas | adding new schemas
#  include_tasks: "config_openldap_schemas_ldifs.yml"
#  with_items: "{{ openldap_schemas }}"
#  loop_control:
#    loop_var: schema

#- name: config_openldap | managing overlays
#  include_tasks: config_openldap_overlays.yml
#  with_items: "{{ openldap_overlays_and_acls }}"
#  loop_control:
#    loop_var: overlay

- name: config_openldap | deleting temp folder
  file:
    path: '{{ openldap_ldif_tmp_dir }}'
    state: absent
  become: true

#- name: config_openldap | creating database population config
#  template:
#    src: etc/ldap/slapd.d/populate_content.ldif.j2
#    dest: /etc/ldap/slapd.d/populate_content.ldif
#    owner: root
#    group: root
#    mode: 0640

#- name: config_openldap | setting admin password
#  shell: slappasswd -s {{ openldap_admin_password }}
#  register: _openldap_admin_password

#- name: config_openldap | restart slapd
#  service:
#    name: slapd
#    enabled: true
#    state: restarted
#  when:
#    - _openldap_admin_password is defined


#- name: config_openldap | populating openLDAP
#  shell: "ldapadd -x -D {{ openldap_bind_id }} -w {{ openldap_admin_password }} -f /etc/ldap/slapd.d/populate_content.ldif"
#  ignore_errors: true
#  when:
#    - openldap_populate is defined
#    - openldap_populate|bool